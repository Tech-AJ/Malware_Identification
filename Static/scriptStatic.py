import csv
import os

isMalware = ['Malware']
listImageFileHeader=['Machine','NumberOfSections','PointerToSymbolTable','NumberOfSymbols', 'SizeOfOptionalHeade','Characteristics']

listOptionalHeader = ['Magic', 'MajorLinkerVersion', 'MinorLinkerVersion', 'SizeOfCode', 'SizeOfInitializedData',
                      'SizeOfUninitializedData', 'AddressOfEntryPoint', 'BaseOfCode', 'BaseOfData', 'ImageBase',
                      'SectionAlignment', 'FileAlignment', 'MajorOperatingSystemVersion', 'MinorOperatingSystemVersion',
                      'MajorImageVersion', 'MinorImageVersion', 'MajorSubsystemVersion', 'MinorSubsystemVersion',
                      'Reserved1', 'SizeOfImage', 'SizeOfHeaders', 'CheckSum', 'Subsystem', 'DllCharacteristics',
                      'SizeOfStackReserve', 'SizeOfStackCommit', 'SizeOfHeapReserve', 'SizeOfHeapCommit' ]
# 'LoaderFlags','NumberOfRvaAndSizes', 'IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE']

listSectionHearder = ['Misc', 'Misc_PhysicalAddress', 'Misc_VirtualSize', 'VirtualAddress', 'SizeOfRawData',
                      'PointerToRawData', 'PointerToRelocations', 'PointerToLinenumbers', 'NumberOfRelocations',
                      'NumberOfLinenumbers', 'Characteristics', 'Entropy']
with open('staticTrain.csv', 'wb') as outfile2:
    writer = csv.writer(outfile2)
    writer.writerow(isMalware + listImageFileHeader+ listOptionalHeader + listSectionHearder)

    # path to training data folder
    for root, dirs, files in os.walk(os.getcwd() + "/../Malware Static/"):
        for file in files:

            if file == "Structure_Info.txt":

                row = []
                if (root.find("Benign") != -1):

                    row.append(0)
                else:
                    row.append(1)

                with open(os.path.join(root, file)) as f:
                    lines = f.readlines()
                    for i in range(0, len(lines)):
                        line = lines[i]
                        if line.find("[IMAGE_FILE_HEADER]") != -1:
                            # 2 pos is required
                            str = lines[2 + i].split(":")
                            row.append(int(str[1].strip(), 16))

                            # other featues are removed during feature selection
                            # for j in range(1, 8):
                            #     str = lines[j + i].split(":")
                            #     if j==3:
                            #         continue
                            #     else:
                            #         row.append(int(str[1].strip(), 16))


                        if line.find("[IMAGE_OPTIONAL_HEADER]") != -1:
                            count = 0
                            for j in range(1, 29):
                                str = lines[j + i].split(":")
                                row.append(int(str[1].strip(), 16))
                                # row.append(int(str[1].strip(),16))
                                # print(str[1])
                                count += 1
                                if count == 28:
                                    break
                        if line.find("[IMAGE_SECTION_HEADER]") != -1:
                            count = 0
                            i += 1

                            for j in range(1, 14):
                                if j == 12:
                                    continue
                                if j == 13:
                                    #print(lines[i+j])
                                    str = lines[i + j].split(":")
                                    row.append(str[1].strip().split(" ")[0].strip())
                                    continue

                                str = lines[i + j].split(":")
                                row.append(int(str[1].strip(), 16))

                                count += 1

                            break



                    writer.writerow(row)

